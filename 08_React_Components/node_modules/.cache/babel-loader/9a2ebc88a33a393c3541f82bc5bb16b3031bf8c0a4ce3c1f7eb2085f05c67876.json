{"ast":null,"code":"var _jsxFileName = \"/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/Components/Logs/Logs.js\";\nimport LogItem from \"./LogItem/LogItem\";\nimport Card from \"../UI/Card/Card\";\nimport './Logs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = props => {\n  /*\n      logsData 用来存储学习的日志，\n      这个数据出了当前组件，logsform 也需要\n      当遇到一个数据需要别多个组件使用时，可以把数据放入到这些组件的共同祖先元素中\n      \n      state 的提升\n  */\n\n  // map means - 根据一个已有数组生成一个新数组\n  // 如果元素的位置不会变化，那么可以用index 做为key value\n  //logsData.map((item, index) => <LogItem key={index} date={item.date} desc={item.desc} time={item.time}/>)\n\n  //logsData.map(item => <LogItem {...item} />)\n\n  // 如果元素的位置会变化, 要用元素里的id\n  const lonItemDate = this.props.logsData.map(item => /*#__PURE__*/_jsxDEV(LogItem, {\n    date: item.date,\n    desc: item.desc,\n    time: item.time\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 58\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: lonItemDate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["LogItem","Card","jsxDEV","_jsxDEV","Logs","props","lonItemDate","logsData","map","item","date","desc","time","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/Components/Logs/Logs.js"],"sourcesContent":["import LogItem from \"./LogItem/LogItem\";\nimport Card from \"../UI/Card/Card\"\n\nimport './Logs.css'\n\n\nconst Logs = (props) => {\n\n    /*\n        logsData 用来存储学习的日志，\n        这个数据出了当前组件，logsform 也需要\n        当遇到一个数据需要别多个组件使用时，可以把数据放入到这些组件的共同祖先元素中\n        \n        state 的提升\n    */\n\n  \n\n // map means - 根据一个已有数组生成一个新数组\n                // 如果元素的位置不会变化，那么可以用index 做为key value\n                //logsData.map((item, index) => <LogItem key={index} date={item.date} desc={item.desc} time={item.time}/>)\n\n                //logsData.map(item => <LogItem {...item} />)\n\n                // 如果元素的位置会变化, 要用元素里的id\n    const lonItemDate =  this.props.logsData.map(item => <LogItem key={item.id} date={item.date} desc={item.desc} time={item.time}/>);\n    return <Card className=\"logs\">\n            {/* <LogItem test=\"123\" hello=\"{'name':'hello', age:10}\" fn={()=>{console.log('hello, world')}} /> */}\n            {\n                lonItemDate\n            }         \n         </Card>\n};\n\nexport default Logs;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,iBAAiB;AAElC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;;EAIC;EACe;EACA;;EAEA;;EAEA;EACZ,MAAMC,WAAW,GAAI,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAACC,IAAI,iBAAIN,OAAA,CAACH,OAAO;IAAeU,IAAI,EAAED,IAAI,CAACC,IAAK;IAACC,IAAI,EAAEF,IAAI,CAACE,IAAK;IAACC,IAAI,EAAEH,IAAI,CAACG;EAAK,GAA3DH,IAAI,CAACI,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAqD,CAAC,CAAC;EACjI,oBAAOd,OAAA,CAACF,IAAI;IAACiB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAGjBb;EAAW;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAChB,CAAC;AAACG,EAAA,GA1BIhB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}