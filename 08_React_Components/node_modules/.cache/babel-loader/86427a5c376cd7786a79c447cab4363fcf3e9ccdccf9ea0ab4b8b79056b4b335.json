{"ast":null,"code":"var _jsxFileName = \"/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/App.js\",\n  _s = $RefreshSig$();\nimport Logs from \"./Components/Logs/Logs\";\nimport LogsFrom from \"./Components/LogsForm/LogsForm\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //数据\n  const [logsData, setLogsData] = useState([{\n    id: 1,\n    date: new Date(2023, 1, 22, 17, 30, 15),\n    desc: 'learning superset',\n    time: 30\n  }, {\n    id: 2,\n    date: new Date(2023, 2, 23, 12, 22, 15),\n    desc: 'learning nodejs',\n    time: 20\n  }, {\n    id: 3,\n    date: new Date(2023, 3, 10, 9, 5, 15),\n    desc: 'learning golang',\n    time: 40\n  }]);\n  const saveLogHandler = newLog => {\n    //console.log(newLog);\n    newLog.id = Date.now() + ''; // 从Date format 换成了 string;\n\n    setLogsData([...logsData, newLog]); //展开数据集logsData, 在最后面加上newLog\n    // setLogsData([newLog, ...logsData,]); //展开数据集logsData, 在最前面加上newLog\n  };\n\n  const delLogByIndex = index => {\n    setLogsData(prevState => {\n      const newLog = [...prevState];\n      newLog.splice(index, 1);\n      return newLog;\n    });\n\n    //logsData.splice(index, 1); // 破坏现有结构，要先复制\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LogsFrom, {\n      onSaveLog: saveLogHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logs, {\n      logsData: logsData,\n      onDelLog: delLogByIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"9MmM//Wcb5gdx+Oe7PLZdS+sNbc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Logs","LogsFrom","useState","jsxDEV","_jsxDEV","App","_s","logsData","setLogsData","id","date","Date","desc","time","saveLogHandler","newLog","now","delLogByIndex","index","prevState","splice","className","children","onSaveLog","fileName","_jsxFileName","lineNumber","columnNumber","onDelLog","_c","$RefreshReg$"],"sources":["/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/App.js"],"sourcesContent":["import Logs from \"./Components/Logs/Logs\";\nimport LogsFrom from \"./Components/LogsForm/LogsForm\";\nimport {useState} from \"react\";\n\nimport \"./App.css\"\n\nconst App = () => {   \n\n    //数据\n    const [logsData, setLogsData] = useState([\n        {\n            id: 1,\n            date: new Date(2023, 1, 22, 17, 30, 15),\n            desc: 'learning superset',\n            time: 30\n        },\n        {\n            id: 2,\n            date: new Date(2023, 2, 23, 12, 22, 15),\n            desc: 'learning nodejs',\n            time: 20\n        },\n        {\n            id: 3,\n            date: new Date(2023, 3, 10, 9, 5, 15),\n            desc: 'learning golang',\n            time: 40\n        }\n    ]);\n\n    const saveLogHandler = (newLog) => {\n        //console.log(newLog);\n        newLog.id = Date.now() + ''; // 从Date format 换成了 string;\n\n        setLogsData([...logsData, newLog]); //展开数据集logsData, 在最后面加上newLog\n       // setLogsData([newLog, ...logsData,]); //展开数据集logsData, 在最前面加上newLog\n\n\n    }; \n\n    const delLogByIndex = (index) => {\n        \n        setLogsData(prevState => {\n            const newLog = [...prevState];\n            newLog.splice(index, 1);\n            return newLog;\n        })\n        \n        //logsData.splice(index, 1); // 破坏现有结构，要先复制\n    }\n\n    return <div className=\"app\">\n            <LogsFrom onSaveLog = {saveLogHandler} />\n            <Logs logsData={logsData} onDelLog={delLogByIndex} />\n         </div>;\n\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAAQC,QAAQ,QAAO,OAAO;AAE9B,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACrC;IACIO,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCC,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACrCC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;EAEF,MAAMC,cAAc,GAAIC,MAAM,IAAK;IAC/B;IACAA,MAAM,CAACN,EAAE,GAAGE,IAAI,CAACK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAE7BR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC;EAGH,CAAC;;EAED,MAAME,aAAa,GAAIC,KAAK,IAAK;IAE7BV,WAAW,CAACW,SAAS,IAAI;MACrB,MAAMJ,MAAM,GAAG,CAAC,GAAGI,SAAS,CAAC;MAC7BJ,MAAM,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACvB,OAAOH,MAAM;IACjB,CAAC,CAAC;;IAEF;EACJ,CAAC;;EAED,oBAAOX,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBlB,OAAA,CAACH,QAAQ;MAACsB,SAAS,EAAIT;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCvB,OAAA,CAACJ,IAAI;MAACO,QAAQ,EAAEA,QAAS;MAACqB,QAAQ,EAAEX;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEf,CAAC;AAACrB,EAAA,CAlDID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}