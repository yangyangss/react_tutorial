{"ast":null,"code":"var _jsxFileName = \"/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  /**\n   * 在React 中， 当组件渲染完毕，再修改组件中的变量，不会使组件重新渲染\n   * 需要一个特殊的变量，当这个变量被修改时，组件就会重新渲染\n   * 就是 State, State 对当前组件，其他组件无法访问\n   * State 相当于一个变量，只是这个变量在react里进行了注册，react会监控这个变量\n   */\n\n  useState();\n  let count = 1;\n  const addHandler = () => {\n    //alert('+1');\n    count += 1;\n    document.getElementById('count_number').innerText = count;\n    console.log('count value is ' + count);\n  };\n  const subHandler = () => {\n    count -= 1;\n    //alert('-1');\n\n    console.log('count value is ' + count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'app',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"count_number\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: subHandler,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","count","addHandler","document","getElementById","innerText","console","log","subHandler","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yangshulin/github_repo/Tuition/react_tutorial/08_React_Components/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nconst App = () => {\n\n    /**\n     * 在React 中， 当组件渲染完毕，再修改组件中的变量，不会使组件重新渲染\n     * 需要一个特殊的变量，当这个变量被修改时，组件就会重新渲染\n     * 就是 State, State 对当前组件，其他组件无法访问\n     * State 相当于一个变量，只是这个变量在react里进行了注册，react会监控这个变量\n     */\n\n    useState()\n\n    let count = 1;\n\n    const addHandler =() => {\n        //alert('+1');\n        count += 1;\n        document.getElementById('count_number').innerText = count;\n        console.log('count value is ' + count);\n    };\n\n\n    const subHandler =() => {\n        count -= 1;\n        //alert('-1');\n   \n        console.log('count value is ' + count);\n    };\n\n    return <div className={'app'}>\n        <h1 id='count_number'>{count}</h1>\n        <button onClick={subHandler}>-</button>\n        <button onClick={addHandler}>+</button>\n         </div>\n};\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd;AACJ;AACA;AACA;AACA;AACA;;EAEIJ,QAAQ,CAAC,CAAC;EAEV,IAAIK,KAAK,GAAG,CAAC;EAEb,MAAMC,UAAU,GAAEA,CAAA,KAAM;IACpB;IACAD,KAAK,IAAI,CAAC;IACVE,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,SAAS,GAAGJ,KAAK;IACzDK,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,KAAK,CAAC;EAC1C,CAAC;EAGD,MAAMO,UAAU,GAAEA,CAAA,KAAM;IACpBP,KAAK,IAAI,CAAC;IACV;;IAEAK,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,KAAK,CAAC;EAC1C,CAAC;EAED,oBAAOH,OAAA;IAAKW,SAAS,EAAE,KAAM;IAAAC,QAAA,gBACzBZ,OAAA;MAAIa,EAAE,EAAC,cAAc;MAAAD,QAAA,EAAET;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCjB,OAAA;MAAQkB,OAAO,EAAER,UAAW;MAAAE,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCjB,OAAA;MAAQkB,OAAO,EAAEd,UAAW;MAAAQ,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AACf,CAAC;AAACf,EAAA,CAjCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}